<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WiperDog</web>
<name>JobDBConnectionConfiguration</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.AllDocs</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1376566693000</creationDate>
<date>1376880063000</date>
<contentUpdateDate>1376646643000</contentUpdateDate>
<version>4.8</version>
<title>JobDBConnectionConfiguration</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.JobDBConnectionConfiguration</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>2a95585f-0661-4e56-bb47-f03a559e64ba</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>var paramsResult = {}
var isDirty = false
var previousSelectedDB = ""
var previousSelectedJob = ""
var domainURL = "http://153.122.22.111:13111/DBCommonConfig"
function deleteInstanceRecord(r){
	var i= r.parentNode.parentNode.rowIndex;
	var row = r.parentNode.parentNode
	document.getElementById('instanceParamTable').deleteRow(i);
	var instanceName = row.cells[0].innerText
	delete paramsResult.instances[instanceName]
   }
require(['jquery'],function($){

   function resetControl(){
      $("#jobName").empty()
      $("#hostID").val("")
      $("#Sid").val("")
      $("#paramContent").empty()
      $("#InstanceParamList").empty()
      $("#instanceName").val("")
      $("#hostIDInstance").val("")
      $("#sidInstance").val("")
      $("#instanceSchedule").val('60i')
      $("#instanceParamTable").empty()
      $("#instanceParamTable").append("&lt;tr&gt;&lt;th&gt;&lt;p&gt;Instance's name&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Params&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Schedule&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Delete instance&lt;/p&gt;&lt;/th&gt;&lt;/tr&gt;")
      paramsResult = {}
   }

   $(document).ready(function(){
      
      $("#dbTypeCbb").change(function(){
          var choice = false
          if(isDirty){
             choice = confirm("There are modifications!Continue without saving?")
          }
          if(!choice &amp;&amp; isDirty){
             $("#dbTypeCbb").val(previousSelectedDB)
             return
          } else {
             if(choice){
                isDirty = false
             }
          }
          var selectedDBType = $("#dbTypeCbb option:selected").val()
          previousSelectedDB = $("#dbTypeCbb option:selected").val()
          $("#listJob option:gt(0)").remove()
          resetControl()
          if(selectedDBType != null &amp;&amp; selectedDBType != ""){
             $.ajax({
                 type: "GET",
                 crossDomain: true,
                 url:domainURL + "?dbtype=" + selectedDBType,
                 dataType: 'json',
                 success : function(result){
                       for(var i = 0; i&lt;result.length;i++){
                            $("#listJob").append("&lt;option id=" + result[i] + " value=" + result[i] + "&gt;" + result[i] + "&lt;/option&gt;")
                       }
                 },
                 error : function(xhr,status,error){
                       alert("There is an error! Wiperdog agent is on yet?")
                       console.log(status)
                       console.log(error)
                       console.log(xhr)
                 },
                 "Access-Control-Allow-Origin":domainURL
               });
          }
          
      });

      $("#listJob").change(function(){
         var choice = false
         if(isDirty){
            choice = confirm("There are modifications!Continue without saving?")
         }
         if(!choice &amp;&amp; isDirty){
            $("#listJob").val(previousSelectedJob)
            return
         } else {
            if(choice){
               isDirty = false
            }
         }
         previousSelectedJob = $("#listJob option:selected").val()
         resetControl()
         if($("#listJob option:selected").val() != ''){
            var jobName = $("#listJob option:selected").val()
            $("#jobName").text(jobName)
            $.ajax({
                 type: "GET",
                 crossDomain: true,
                 url:domainURL + "?jobName=" + jobName,
                 dataType: 'json',
                 success : function(result){
                       paramsResult = result
                       $("#paramContent").text(JSON.stringify(paramsResult.params))
                       var mapInstance = paramsResult.instances
                       if(!(mapInstance instanceof Array)){
                          for(var instanceKey in mapInstance){
                             var instance = mapInstance[instanceKey]
                             var strParam = instance.params != null ? JSON.stringify(instance.params) : ""
                             var strSchedule = instance.schedule != null ? instance.schedule : ""
                             $("#instanceParamTable").append("&lt;tr&gt;&lt;td&gt;&lt;p&gt;" + instanceKey + "&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;" + strParam + "&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;" + strSchedule + "&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=\"submit\" value=\"delete\" class=\"commonBtn\" id=" + instanceKey + " onClick='deleteInstanceRecord(this)'&gt;&lt;/td&gt;&lt;/tr&gt;")
                          }
                       }
                 },
                 error : function(xhr,status,error){
                       alert("There is an error! Wiperdog agent is on yet?")
                       console.log(status)
                       console.log(error)
                       console.log(xhr)
                 },
                 "Access-Control-Allow-Origin":domainURL
            });
         }
      });

      $("#updateForJobBtn").click(function(){
         var hostID = $("#hostID").val()
         if(hostID.indexOf(".") &gt; 0){
            $("#message").text("Host ID can not contain punctuation character")
            $("#message").addClass("error").removeClass("message")
            return
         } else {
           $("#message").text("")
         }
         var sid = $("#Sid").val()
         if(sid != "" &amp;&amp; hostID == "" ){
            $("#message").text("Host ID can not empty if Sid is valid")
            $("#message").addClass("error").removeClass("message")
            return
         } else {
           $("#message").text("")
         }
         if($("#dbTypeCbb option:selected").val() == ""){
             $("#message").text("DB Type is required")
            $("#message").addClass("error").removeClass("message")
             return 
         } else {
           $("#message").text("")
         }
         if($("#listJob option:selected").val() == ""){
            $("#message").text("Job file is required")
            $("#message").addClass("error").removeClass("message")
             return
         } else {
           $("#message").text("")
         }
         if(hostID != null &amp;&amp; hostID != ""){
            
            var mapData = {}
            mapData['dbHostId'] = hostID
            mapData['dbSid'] = sid
            paramsResult.params = mapData
            $("#paramContent").text(JSON.stringify(mapData))
            isDirty = true
         }
      });

      $("#updateForInstanceBtn").click(function(){
         if($("#dbTypeCbb option:selected").val() == ""){
             $("#message").text("DB Type is required")
            $("#message").addClass("error").removeClass("message")
             return 
         } else {
           $("#message").text("")
         }

         if($("#listJob option:selected").val() == ""){
            $("#message").text("Job file is required")
            $("#message").addClass("error").removeClass("message")
             return
         } else {
           $("#message").text("")
         }

         var instanceName = $("#instanceName").val()
         if(instanceName == "" ){
            $("#message").text("Instances Name is required")
            $("#message").addClass("error").removeClass("message")
            return
         } else {
           $("#message").text("")
         }
         var hostIDInstance = $("#hostIDInstance").val()
         if(hostIDInstance.indexOf(".") &gt; 0){
           $("#message").text("Host ID can not contain punctuation character")
            $("#message").addClass("error").removeClass("message")
            return
         } else {
           $("#message").text("")
         }
         var sidInstance = $("#sidInstance").val()
         if(sidInstance != "" &amp;&amp; hostIDInstance == "" ){
           $("#message").text("Host ID can not empty if Sid is valid")
            $("#message").addClass("error").removeClass("message")
            return
         } else {
           $("#message").text("")
         }
         var instanceSchedule = ($("#instanceSchedule").val() != null &amp;&amp; $("#instanceSchedule").val() != "")?$("#instanceSchedule").val():'60i'
         var finalMapData = {}
         if(instanceName != null &amp;&amp; instanceName != ""){
            var mapData = {}
            if(hostIDInstance != null &amp;&amp; hostIDInstance != ""){
               mapData['dbHostId'] = hostIDInstance
            }
            if(sidInstance != null &amp;&amp; sidInstance != ""){
               mapData['dbSid'] = sidInstance
            }
            if(mapData != null &amp;&amp; hostIDInstance != null &amp;&amp; hostIDInstance != "" &amp;&amp; sidInstance != null &amp;&amp; sidInstance != ""){
               finalMapData['params'] = mapData
            }
            //if(paramsResult.instances[instanceName] == null){
            //   paramsResult.instances[instanceName] = {}
            //}
            //paramsResult.instances[instanceName] = finalMapData
            //paramsResult.instances[instanceName].schedule = instanceSchedule 
            //$("#instanceParamContent").text(JSON.stringify(paramsResult.instances))
            if(paramsResult.instances[instanceName] == null){
                paramsResult.instances[instanceName] = {}
            }
            paramsResult.instances[instanceName].schedule = instanceSchedule
            for(data in mapData){
               if(paramsResult.instances[instanceName].params == null){
                  paramsResult.instances[instanceName].params = {}
               }
               paramsResult.instances[instanceName].params[data] = mapData[data]
            }
            $("#instanceParamTable").empty()
            $("#instanceParamTable").append("&lt;tr&gt;&lt;th&gt;&lt;p&gt;Instance's name&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Params&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Schedule&lt;/p&gt;&lt;/th&gt;&lt;th&gt;&lt;p&gt;Delete instance&lt;/p&gt;&lt;/th&gt;&lt;/tr&gt;")
            for(var instanceKey in paramsResult.instances){
                var instance = paramsResult.instances[instanceKey]
                var strParam = instance.params != null ? JSON.stringify(instance.params) : ""
                var strSchedule = instance.schedule != null ? instance.schedule : ""
                $("#instanceParamTable").append("&lt;tr&gt;&lt;td&gt;&lt;p&gt;" + instanceKey + "&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;" + strParam + "&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;" + strSchedule + "&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=\"submit\" value=\"delete\" class=\"commonBtn\" id=" + instanceKey + " onClick=\"deleteInstanceRecord(this)\"&gt;&lt;/td&gt;&lt;/tr&gt;")
            }
            isDirty = true
         }
      });      

      $("#CancelBtn").click(function(){
         if(!isDirty){
            $("#dbTypeCbb").val("")
            $("#listJob").val("")
            resetControl()
         }else{
            //dialog box confirm if dirty
            var choice = confirm('Are you sure to cancel modification ?')
            if(choice){
               $("#dbTypeCbb").val("")
               $("#listJob").val("")
               resetControl()
               isDirty = false
            }
          }
      });

      $("#UpdateConfigBtn").click(function(){
         if(isDirty){
         var jobName = $("#listJob option:selected").val()
         var finalMapResult = {}
         
         finalMapResult['job'] = jobName
         finalMapResult['data'] = paramsResult
         if(paramsResult)
            $.ajax({
                 type: "POST",
                 crossDomain: true,
                 url:domainURL + "?jobName=" + jobName,
                 dataType: 'json',
                 data: JSON.stringify(finalMapResult),
                 success : function(result){
                       if(result.status == 'OK'){
                          $("#message").addClass("message").removeClass("error")
                          $("#message").text("Update succesfully !")
                          isDirty = false
                       }
                 },
                 error : function(xhr,status,error){
                       $("#message").addClass("message").removeClass("error")
                       $("#message").text("There is an error! Wiperdog agent is on yet?")
                       console.log(status)
                       console.log(error)
                       console.log(xhr)
                 },
                 async:false
            });
         }else {
            $("#message").text("There is no modification!").addClass('notice').removeClass('error').removeClass('message')
         }
      });

   });
jQuery.noConflict();
});</code>
</property>
<property>
<name>js</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.JobDBConnectionConfiguration</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>085ddb83-474d-41e7-a161-f28c888f61ac</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>.requiredField{
 color:rgb(252, 145, 86);
}
.commonBtn{
 width:100px;
 height:35px;
 background:white;
}
.commonBtn:hover{
 background:#60AAEE;
 color:white
}
#display_err{
 margin-left: 100px;
 margin-top: 100px;

}
.error{
 font-weight: bold;
 color : #D43232
}
.message{
 font-weight: bold;
 color : #0E6D1A
}
.notice{
 font-weight: bold;
 color : rgb(252, 145, 86)
}
#configJobDBInfo{
float:left;
margin-right: 100px
}
#button{
clear:both
}</code>
</property>
<property>
<name>css</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<content>{{groovy}}
import org.xwiki.context.*

def ec = services.component.getInstance(Execution.class).getContext()

def listDBType = ['SQL_Server', 'MySQL', 'Postgres']

ec.setProperty("listDBType", listDBType)
{{/groovy}}

{{html clean="false"}}
&lt;body&gt;
 &lt;table id="configJobDBInfo"&gt;
  &lt;tr&gt;
    &lt;th class=requiredField&gt;DB's type(*)&lt;/th&gt;
   &lt;td&gt;
    &lt;select style="width:100%" id="dbTypeCbb" tabindex="1"&gt;
{{/html}}

{{groovy}}
import org.xwiki.context.*

def ec = services.component.getInstance(Execution.class).getContext()

def listDBType = ec.getProperty("listDBType")
println "{{html clean=\"false\"}}"
println '&lt;option id=\"none\" value=\"\"&gt;-select a db type-&lt;/option&gt;'
listDBType.each{dbType-&gt;
   println "&lt;option id=\"$dbType\" value=\"$dbType\"&gt;$dbType&lt;/option&gt;"
}
println "{{/html}}"
{{/groovy}}

{{html clean="false"}}
    &lt;/select&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
    &lt;th class=requiredField&gt;Job's File(*)&lt;/th&gt;
   &lt;td colspan=4&gt;
    &lt;select style="width:100%" id="listJob" tabindex="2"&gt;
     &lt;option id="none" value=""&gt;-select a job-&lt;/option&gt;
    &lt;/select&gt;
   &lt;/td&gt;
  &lt;tr&gt;
   &lt;th colspan=3&gt;
    &lt;p&gt;DB INFO FOR JOB&lt;/p&gt;
    &lt;div id="jobName"&gt;&lt;/div&gt;
   &lt;/th&gt;
   &lt;td rowspan=2&gt;
    &lt;table&gt;
     &lt;tr&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td rowspan=3&gt;
       &lt;input type="submit" value="Update for Job" class="commonBtn" id="updateForJobBtn" tabindex="5"/&gt;
      &lt;/td&gt;
      &lt;th&gt;
       &lt;p&gt;Job param file:&lt;/p&gt;
      &lt;/th&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td rowspan="2"&gt;
       &lt;textarea id="paramContent" rows=5 readonly="true"&gt;&lt;/textarea&gt;
      &lt;/td&gt;
     &lt;/tr&gt;
    &lt;/table&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td colspan=3&gt;
    &lt;table id="formJobInfo"&gt;
     &lt;tr&gt;
      &lt;th&gt;&lt;p&gt;Host ID:&lt;/p&gt;&lt;/th&gt;
      &lt;td&gt;&lt;input type="text" id="hostID" tabindex="3"/&gt;&lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;th&gt;&lt;p&gt;Sid:&lt;/p&gt;&lt;/th&gt;
      &lt;td&gt;&lt;input type="text" id="Sid" tabindex="4"/&gt;&lt;/td&gt;
     &lt;/tr&gt;
    &lt;/table&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;th colspan=3&gt;
    &lt;p&gt;DB INFO FOR INSTANCE&lt;/p&gt;
   &lt;/th&gt;
   &lt;td rowspan=6&gt;
    &lt;table&gt;
     &lt;tr&gt;
      &lt;td rowspan=3&gt;
       &lt;input type="submit" value="Update" class="commonBtn" id="updateForInstanceBtn" tabindex="10"/&gt;
      &lt;/td&gt;
      &lt;th&gt;
       &lt;p&gt;Job instance file:&lt;/p&gt;
      &lt;/th&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td rowspan="2"&gt;
       &lt;div id="instanceParamContent"&gt;
         &lt;table id="instanceParamTable"&gt;
            &lt;tr&gt;
               &lt;th&gt;
                  &lt;p&gt;Instance's name&lt;/p&gt;
               &lt;/th&gt;
               &lt;th&gt;
                  &lt;p&gt;Params&lt;/p&gt;
               &lt;/th&gt;
               &lt;th&gt;
                  &lt;p&gt;Schedule&lt;/p&gt;
               &lt;/th&gt;
               &lt;th&gt;
                  &lt;p&gt;Delete instance&lt;/p&gt;
               &lt;/th&gt;
            &lt;/tr&gt;
         &lt;/table&gt;
       &lt;/div&gt;
      &lt;/td&gt;
     &lt;/tr&gt;
    &lt;/table&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td colspan=3 rowspan=4&gt;
    &lt;table id="formInstanceInfo"&gt;
     &lt;tr&gt;
      &lt;th&gt;
       &lt;p class="requiredField"&gt;Instance name(*):&lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
       &lt;input type="text" id="instanceName" tabindex="6"/&gt;
      &lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;th&gt;
       &lt;p&gt;Host ID:&lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
       &lt;input type="text" id="hostIDInstance" tabindex="7"/&gt;
      &lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;th&gt;
       &lt;p&gt;Sid:&lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
       &lt;input type="text" id="sidInstance" tabindex="8"/&gt;
      &lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
      &lt;th&gt;
       &lt;p&gt;Instance schedule:&lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
       &lt;input type="text" id="instanceSchedule" value="60i" tabindex="9"/&gt;
      &lt;/td&gt;
     &lt;/tr&gt;
    &lt;/table&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/table&gt;
&lt;div id="display_err"&gt;
   &lt;span id = "message"&gt;&lt;/&gt;
&lt;/div&gt;
 &lt;div id="button"&gt;&lt;input type="submit" class="commonBtn" id="UpdateConfigBtn" value="Update config" tabindex="11"/&gt;
 &lt;input type="submit" class="commonBtn" id="CancelBtn" value="Cancel" tabindex="12"/&gt;&lt;/button&gt;
&lt;/body&gt;
{{/html}}

</content></xwikidoc>