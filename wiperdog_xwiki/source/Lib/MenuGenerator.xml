<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Lib</web>
<name>MenuGenerator</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>WiperDog.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1376364375000</creationDate>
<date>1376364375000</date>
<contentUpdateDate>1376364375000</contentUpdateDate>
<version>4.3</version>
<title>MenuGenerator</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Imported from XAR</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>Lib.MenuGenerator</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>22d47077-abde-480e-893b-1c77d94fe25a</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>var persisteduls=new Object()
var ddtreemenu=new Object()

ddtreemenu.closefolder="/xwiki/resources/SimpleTreeMenu/closed.gif" //set image path to "closed" folder image
ddtreemenu.openfolder="/xwiki/resources/SimpleTreeMenu/open.gif" //set image path to "open" folder image

//////////No need to edit beyond here///////////////////////////

ddtreemenu.createTree=function(treeid, enablepersist, persistdays){
var ultags=document.getElementById(treeid).getElementsByTagName("ul")
if (typeof persisteduls[treeid]=="undefined")
persisteduls[treeid]=(enablepersist==true &amp;&amp; ddtreemenu.getCookie(treeid)!="")? ddtreemenu.getCookie(treeid).split(",") : ""
for (var i=0; i&lt;ultags.length; i++)
ddtreemenu.buildSubTree(treeid, ultags[i], i)
if (enablepersist==true){ //if enable persist feature
var durationdays=(typeof persistdays=="undefined")? 1 : parseInt(persistdays)
ddtreemenu.dotask(window, function(){ddtreemenu.rememberstate(treeid, durationdays)}, "unload") //save opened UL indexes on body unload
}
}

ddtreemenu.buildSubTree=function(treeid, ulelement, index){
ulelement.parentNode.className="submenu"
if (typeof persisteduls[treeid]=="object"){ //if cookie exists (persisteduls[treeid] is an array versus "" string)
if (ddtreemenu.searcharray(persisteduls[treeid], index)){
ulelement.setAttribute("rel", "open")
ulelement.style.display="block"
ulelement.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
}
else
ulelement.setAttribute("rel", "closed")
} //end cookie persist code
else if (ulelement.getAttribute("rel")==null || ulelement.getAttribute("rel")==false) //if no cookie and UL has NO rel attribute explicted added by user
ulelement.setAttribute("rel", "closed")
else if (ulelement.getAttribute("rel")=="open") //else if no cookie and this UL has an explicit rel value of "open"
ddtreemenu.expandSubTree(treeid, ulelement) //expand this UL plus all parent ULs (so the most inner UL is revealed!)
ulelement.parentNode.onclick=function(e){
var submenu=this.getElementsByTagName("ul")[0]
if (submenu.getAttribute("rel")=="closed"){
submenu.style.display="block"
submenu.setAttribute("rel", "open")
ulelement.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
}
else if (submenu.getAttribute("rel")=="open"){
submenu.style.display="none"
submenu.setAttribute("rel", "closed")
ulelement.parentNode.style.backgroundImage="url("+ddtreemenu.closefolder+")"
}
ddtreemenu.preventpropagate(e)
}
ulelement.onclick=function(e){
ddtreemenu.preventpropagate(e)
}
}

ddtreemenu.expandSubTree=function(treeid, ulelement){ //expand a UL element and any of its parent ULs
var rootnode=document.getElementById(treeid)
var currentnode=ulelement
currentnode.style.display="block"
currentnode.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
while (currentnode!=rootnode){
if (currentnode.tagName=="UL"){ //if parent node is a UL, expand it too
currentnode.style.display="block"
currentnode.setAttribute("rel", "open") //indicate it's open
currentnode.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
}
currentnode=currentnode.parentNode
}
}

ddtreemenu.flatten=function(treeid, action){ //expand or contract all UL elements
var ultags=document.getElementById(treeid).getElementsByTagName("ul")
for (var i=0; i&lt;ultags.length; i++){
ultags[i].style.display=(action=="expand")? "block" : "none"
var relvalue=(action=="expand")? "open" : "closed"
ultags[i].setAttribute("rel", relvalue)
ultags[i].parentNode.style.backgroundImage=(action=="expand")? "url("+ddtreemenu.openfolder+")" : "url("+ddtreemenu.closefolder+")"
}
}

ddtreemenu.rememberstate=function(treeid, durationdays){ //store index of opened ULs relative to other ULs in Tree into cookie
var ultags=document.getElementById(treeid).getElementsByTagName("ul")
var openuls=new Array()
for (var i=0; i&lt;ultags.length; i++){
if (ultags[i].getAttribute("rel")=="open")
openuls[openuls.length]=i //save the index of the opened UL (relative to the entire list of ULs) as an array element
}
if (openuls.length==0) //if there are no opened ULs to save/persist
openuls[0]="none open" //set array value to string to simply indicate all ULs should persist with state being closed
ddtreemenu.setCookie(treeid, openuls.join(","), durationdays) //populate cookie with value treeid=1,2,3 etc (where 1,2... are the indexes of the opened ULs)
}

////A few utility functions below//////////////////////

ddtreemenu.getCookie=function(Name){ //get cookie value
var re=new RegExp(Name+"=[^;]+", "i"); //construct RE to search for target name/value pair
if (document.cookie.match(re)) //if cookie found
return document.cookie.match(re)[0].split("=")[1] //return its value
return ""
}

ddtreemenu.setCookie=function(name, value, days){ //set cookei value
var expireDate = new Date()
//set "expstring" to either future or past date, to set or delete cookie, respectively
var expstring=expireDate.setDate(expireDate.getDate()+parseInt(days))
document.cookie = name+"="+value+"; expires="+expireDate.toGMTString()+"; path=/";
}

ddtreemenu.searcharray=function(thearray, value){ //searches an array for the entered value. If found, delete value from array
var isfound=false
for (var i=0; i&lt;thearray.length; i++){
if (thearray[i]==value){
isfound=true
thearray.shift() //delete this element from array for efficiency sake
break
}
}
return isfound
}

ddtreemenu.preventpropagate=function(e){ //prevent action from bubbling upwards
if (typeof e!="undefined")
e.stopPropagation()
else
event.cancelBubble=true
}

ddtreemenu.dotask=function(target, functionref, tasktype){ //assign a function to execute to an event handler (ie: onunload)
var tasktype=(window.addEventListener)? tasktype : "on"+tasktype
if (target.addEventListener)
target.addEventListener(tasktype, functionref, false)
else if (target.attachEvent)
target.attachEvent(tasktype, functionref)
}</code>
</property>
<property>
<name>treeMenu-js</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>Lib.MenuGenerator</name>
<number>1</number>
<className>XWiki.JavaScriptExtension</className>
<guid>8ea5c46d-1647-4958-8d98-6cf380267004</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>ddtreemenu.createTree("treemenu2", true, 5)
</code></property><property><name>creatTreeMenu-js</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>Lib.MenuGenerator</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>9a8cb683-6376-40e5-8bcb-a9e33cc762b3</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>.treeview ul{ /*CSS for Simple Tree Menu*/
margin: 0;
padding: 0;

display:inline-block;
}
.treeview a{
 width:auto;
 display: inline-block
}
#nav a:hover{
 font-weight:bold;
 text-decoration:none;
 cursor:pointer;
 color: #0089DC

}
.treeview li{ /*Style for LI elements in general (excludes an LI that contains sub lists)*/
background: white url("/xwiki/resources/SimpleTreeMenu/list.gif") no-repeat left center;
list-style-type: none;
padding-left: 22px;
margin-bottom: 3px;
font-weight:bold

}

.treeview li.submenu{ /* Style for LI that contains sub lists (other ULs). */
background: white url("/xwiki/resources/SimpleTreeMenu/closed.gif") no-repeat left 1px;
cursor: hand !important;
cursor: pointer !important;

}
.treeview .ui-state-disabled {
background: white url("/xwiki/resources/SimpleTreeMenu/closed.gif") no-repeat left 1px;
color:#DBD9DA
}


.treeview li.submenu ul{ /*Style for ULs that are children of LIs (submenu) */
display: none; /*Hide them by default. Don't delete. */
}

.treeview .submenu ul li{ /*Style for LIs of ULs that are children of LIs (submenu) */
cursor: default;
font-weight:normal
}
#nav{
 float:left;
width:400px;
margin-right:20px;
}
#viewer #jobname{
  font-weight:bold;
  color:#0089DC;
  float :left;
}</code>
</property>
<property>
<name>treemenu-css</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<content>{{include document="Lib.MongoDBConnection"/}}
{{groovy}}
@Grab(group='com.gmongo', module='gmongo', version='1.0')
import com.gmongo.GMongo
import java.text.SimpleDateFormat
import org.xwiki.context.*

def ec = services.component.getInstance(Execution.class).getContext()

println '{{html wiki = "true" clean="false"}}'
//def  dbName = 'wiperdog'
//def gmongo = new GMongo()
//db = gmongo.getDB(dbName)

MongoDBConnection.getConnection()
def root = [
	"MySQL",
	"SQL_Server",
	"Postgres"
	
]
def child = [
	"Database_Area",
	"Database_Statistic",
	"Database_Structure",
	"FaultManagement",
	"Performance",
	"Proactive_Check",
	"Others"
]

def check_coll = { coll-&gt;
	if( coll!="system.indexes" &amp;&amp; (coll.startsWith("MySQL")|| coll.startsWith("SQL_Server")|| coll.startsWith("Postgres"))){
		return true
	} else {
		return false
	}
}

def tmp_c = [:]
child.each{c-&gt;
	tmp_c[c]=[]
}
def tmp_r=[:]
root.each{r-&gt;
	tmp_r[r]=[:]
	child.each{c-&gt;
		tmp_r[r][c] = []
	}
}



def tmp = new ArrayList&lt;String&gt;();
def list_coll = []
def mapJobIstIid = [:]
MongoDBConnection.db.getCollectionNames().each{
	tmp = it.split("\\.")
	if(tmp.size() == 4){
		tmp += tmp[0] + "." + tmp[1] + "." + tmp[2]
                if(mapJobIstIid[tmp[4]] == null){
                   mapJobIstIid[tmp[4]] = [] 
                }
                mapJobIstIid[tmp[4]].add(tmp[3])
		list_coll.add(tmp)
	}
	tmp = []
}
ec.setProperty("mapJobIstIid", mapJobIstIid)

list_coll.each{
	if(root.contains(it[0])){
		if(child.contains(it[1])){
                        if(!tmp_r[it[0]][it[1]].contains(it[4])){
			   tmp_r[it[0]][it[1]].add(it[4])
                        }
		} else {
                    if(!tmp_r[it[0]]["Others"].contains(it[4])){
		        tmp_r[it[0]]["Others"].add(it[4])		
                    }
		}
	} 

}
def ul_open_r = false
def ul_open_c = false
def ul_open_j = false
println "&lt;div id='nav'&gt;"
println "&lt;a href=\"javascript:ddtreemenu.flatten('treemenu2', 'expand')\"&gt;Expand All&lt;/a&gt; ||&lt;a href=\"javascript:ddtreemenu.flatten('treemenu2', 'contact')\"&gt;Collapse All&lt;/a&gt; "



 tmp_r.each { r-&gt;	
	 if(!ul_open_r){
		 println "&lt;ul id='treemenu2' class='treeview'&gt;"
		 ul_open_r = true
	 }
	 print"&lt;li&gt;"+r.key
	 
	 r.value.each{ c-&gt;
		 if(!ul_open_c){
			 println "&lt;ul&gt;"
			 ul_open_c = true
		 }
		 println "&lt;li&gt;" + c.key
		 c.value.each{ j-&gt;
			 if(!ul_open_j){
				 println "&lt;ul&gt;"
				 ul_open_j = true
			 }
			 println "&lt;li&gt;&lt;a&gt;" + j +"&lt;/a&gt;&lt;/li&gt;"
		 }
		 if(ul_open_j){
			 println "&lt;/ul&gt;"
			 println"&lt;/li&gt;"	
			 ul_open_j = false
		 }else{
		 	 println"&lt;/li&gt;"
		 }		 
	 }
	 if(ul_open_c){
		 println "&lt;/ul&gt;"
		 println"&lt;/li&gt;"						 
		 ul_open_c = false
	 } else {
	 print "&lt;/li&gt;"
	 }
 }
 if(ul_open_r){
	 println "&lt;/ul&gt;"
	 ul_open_r = false
 } 
println "&lt;/div&gt;"
println "{{/html}}"
{{/groovy}}</content></xwikidoc>
